{"version":3,"sources":["components/statistics/Statistic.module.css","components/section/Section.js","components/feedback/FeedbackOptions.js","components/notifications/Notifications.js","components/statistics/Statistics.js","App.js","index.js","components/section/Section.module.css","components/feedback/FeedbackOptions.module.css","components/notifications/Notifications.module.css"],"names":["module","exports","Section","title","children","className","s","FeedbackOptions","options","onLeaveFeedback","keys","Object","map","item","index","button","name","onClick","Notification","message","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","statList","App","state","clickFeedback","event","data","target","setState","prevState","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,SAAW,8B,uICiB/CC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACGD,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,M,gBCcQG,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAOC,OAAOD,KAAKF,GACzB,OACE,8BACGE,EAAKE,KAAI,SAACC,EAAMC,GAAP,OACR,wBAAQT,UAAWC,IAAES,OAAoBC,KAAMH,EAAMI,QAASR,EAA9D,SACGI,GAD+BC,S,gBCLpCI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGd,UAAWC,IAAEa,QAAhB,SAA0BA,KAEhED,EAAaE,aAAe,CAC1BD,QAAS,qBAOID,Q,iBCkBAG,MA3Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,oBAAIrB,UAAU,GAAd,wBACCoB,EACC,qBAAIpB,UAAWC,IAAEqB,SAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UAGF,cAAC,EAAD,QC2BOE,E,4MAvCbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,cAAgB,SAAAC,GACd,IAAMC,EAAOD,EAAME,OAAOjB,KAC1B,EAAKkB,UAAS,SAAAC,GAAS,sBAAQH,EAAOG,EAAUH,GAAQ,O,EAG1DI,mBAAqB,WAEnB,OADczB,OAAO0B,OAAO,EAAKR,OACpBS,QAAO,SAACC,EAAK1B,GAAN,OAAe0B,EAAM1B,IAAM,I,EAGjD2B,gCAAkC,WAEhC,OADiBC,KAAKC,MAAO,EAAKb,MAAMP,KAAO,EAAKc,qBAAwB,M,4CAI9E,WACE,OACE,mCACE,eAAC,EAAD,CAASjC,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBK,QAASmC,KAAKd,MAAOpB,gBAAiBkC,KAAKb,gBAC5D,cAAC,EAAD,CACER,KAAMqB,KAAKd,MAAMP,KACjBC,QAASoB,KAAKd,MAAMN,QACpBC,IAAKmB,KAAKd,MAAML,IAChBC,MAAOkB,KAAKP,qBACZV,mBAAoBiB,KAAKH,6C,GAhCnBI,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BjD,EAAOC,QAAU,CAAC,MAAQ,yB,kBCA1BD,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,QAAU,kC","file":"static/js/main.ed959916.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistic_title__3G1Yn\",\"statList\":\"Statistic_statList__1owlS\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const keys = Object.keys(options);\r\n  return (\r\n    <div>\r\n      {keys.map((item, index) => (\r\n        <button className={s.button} key={index} name={item} onClick={onLeaveFeedback}>\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notifications.module.css';\r\n\r\nconst Notification = ({ message }) => <p className={s.message}>{message}</p>;\r\n\r\nNotification.defaultProps = {\r\n  message: 'No feedback given',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../notifications/Notifications';\r\nimport s from './Statistic.module.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <h2 className=\"\">Statistics</h2>\r\n      {total ? (\r\n        <ul className={s.statList}>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive feedback: {positivePercentage}%</li>\r\n        </ul>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport Section from './components/section/Section';\r\nimport FeedbackOptions from './components/feedback/FeedbackOptions';\r\nimport Statistics from './components/statistics/Statistics';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  clickFeedback = event => {\r\n    const data = event.target.name;\r\n    this.setState(prevState => ({ [data]: prevState[data] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const total = Object.values(this.state);\r\n    return total.reduce((acc, item) => acc + item, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positive = Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n    return positive;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.clickFeedback} />\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1Musv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__dTyCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notifications_message__34s2A\"};"],"sourceRoot":""}